// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SP.CurrencyService.DB;

#nullable disable

namespace SP.CurrencyService.Migrations
{
    [DbContext(typeof(CurrencyServiceDbContext))]
    [Migration("20250622041135_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SP.CurrencyService.Models.Entity.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建用户");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改用户");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 7342403857206693888L,
                            Abbreviation = "CNY",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 34, 843, DateTimeKind.Local).AddTicks(845),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "人民币"
                        },
                        new
                        {
                            Id = 7342403857353494528L,
                            Abbreviation = "USD",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 34, 878, DateTimeKind.Local).AddTicks(3708),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "美元"
                        },
                        new
                        {
                            Id = 7342403857508683776L,
                            Abbreviation = "EUR",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 34, 916, DateTimeKind.Local).AddTicks(3860),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "欧元"
                        },
                        new
                        {
                            Id = 7342403857672261632L,
                            Abbreviation = "JPY",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 34, 955, DateTimeKind.Local).AddTicks(7747),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "日元"
                        },
                        new
                        {
                            Id = 7342403857840033792L,
                            Abbreviation = "GBP",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 34, 995, DateTimeKind.Local).AddTicks(2994),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "英镑"
                        },
                        new
                        {
                            Id = 7342403857995223040L,
                            Abbreviation = "MOP",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 35, 34, DateTimeKind.Local).AddTicks(8064),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "澳门币"
                        },
                        new
                        {
                            Id = 7342403858167189504L,
                            Abbreviation = "HKD",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 35, 73, DateTimeKind.Local).AddTicks(610),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "港元"
                        },
                        new
                        {
                            Id = 7342403858334961664L,
                            Abbreviation = "KRW",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 35, 116, DateTimeKind.Local).AddTicks(3899),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "韩圆"
                        },
                        new
                        {
                            Id = 7342403858506928128L,
                            Abbreviation = "TWD",
                            CreateDateTime = new DateTime(2025, 6, 22, 12, 11, 35, 153, DateTimeKind.Local).AddTicks(620),
                            CreateUserId = 7333155174099406848L,
                            IsDeleted = false,
                            Name = "新台币"
                        });
                });

            modelBuilder.Entity("SP.CurrencyService.Models.Entity.ExchangeRateRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConvertCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("币种转换");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint")
                        .HasComment("创建用户");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasComment("汇率日期");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(10,2)")
                        .HasComment("汇率");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("SourceCurrencyId")
                        .HasColumnType("long")
                        .HasComment("源币种");

                    b.Property<long>("TargetCurrencyId")
                        .HasColumnType("long")
                        .HasComment("目标币种");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasComment("修改用户");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRateRecords", t =>
                        {
                            t.HasComment("汇率记录");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
