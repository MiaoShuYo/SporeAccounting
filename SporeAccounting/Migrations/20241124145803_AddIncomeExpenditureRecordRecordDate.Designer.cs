// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SporeAccounting;

#nullable disable

namespace SporeAccounting.Migrations
{
    [DbContext(typeof(SporeAccountingDBContext))]
    [Migration("20241124145803_AddIncomeExpenditureRecordRecordDate")]
    partial class AddIncomeExpenditureRecordRecordDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SporeAccounting.Models.AccountBook", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AccountBook");
                });

            modelBuilder.Entity("SporeAccounting.Models.Config", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ConfigTypeEnum")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("SporeAccounting.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = "a4d8cf89-3180-4291-8869-9205538d8960",
                            Abbreviation = "CNY",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6501),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "人民币"
                        },
                        new
                        {
                            Id = "c8b1bc60-6efc-4cd6-8f5f-cf44c03e94ce",
                            Abbreviation = "USD",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6510),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "美元"
                        },
                        new
                        {
                            Id = "1a30cc31-f847-4247-a243-248a3ad9d13a",
                            Abbreviation = "EUR",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6517),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "欧元"
                        },
                        new
                        {
                            Id = "88424068-b069-474c-b3a8-6b77657e0312",
                            Abbreviation = "JPY",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6524),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "日元"
                        },
                        new
                        {
                            Id = "7e2ed102-4d0f-49fa-83d0-a51469fc39c8",
                            Abbreviation = "GBP",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6531),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "英镑"
                        },
                        new
                        {
                            Id = "f8cc5da3-5daf-4e77-b55a-3468748d7a92",
                            Abbreviation = "MOP",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6542),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "澳门币"
                        },
                        new
                        {
                            Id = "079a780e-67ab-42a1-8a99-58aa812bfd77",
                            Abbreviation = "HKD",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6549),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "港元"
                        },
                        new
                        {
                            Id = "b17ff54a-2cdd-40c6-9192-b552268497cc",
                            Abbreviation = "KRW",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6555),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "韩圆"
                        },
                        new
                        {
                            Id = "36b3cccc-cbd6-4e9d-81d6-a0e616ba4ed7",
                            Abbreviation = "TWD",
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6561),
                            CreateUserId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            IsDeleted = false,
                            Name = "新台币"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.ExchangeRateRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ConvertCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParentClassificationId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("IncomeExpenditureClassification");

                    b.HasData(
                        new
                        {
                            Id = "5bbe8aae-f4b2-4495-b985-cccd3fc6d7f6",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(6471),
                            CreateUserId = "7d50a013-0a3e-443c-9c80-8366fa2b8ac2",
                            IsDeleted = false,
                            Name = "其他",
                            Type = -1
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("AfterAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeforAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CurrencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IncomeExpenditureClassificationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IncomeExpenditureClassificationId");

                    b.HasIndex("UserId");

                    b.ToTable("IncomeExpenditureRecord");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("SysRole");

                    b.HasData(
                        new
                        {
                            Id = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(5282),
                            CreateUserId = "7d50a013-0a3e-443c-9c80-8366fa2b8ac2",
                            IsDeleted = false,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            Id = "65d52218-417d-4b55-a41e-af18f4aa67d9",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(5295),
                            CreateUserId = "7d50a013-0a3e-443c-9c80-8366fa2b8ac2",
                            IsDeleted = false,
                            RoleName = "Consumer"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRoleUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UrlId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UrlId");

                    b.ToTable("SysRoleUrl");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CanDelete")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SysUrl");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("SysUser");

                    b.HasData(
                        new
                        {
                            Id = "7d50a013-0a3e-443c-9c80-8366fa2b8ac2",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 24, 22, 58, 2, 905, DateTimeKind.Local).AddTicks(5355),
                            CreateUserId = "7d50a013-0a3e-443c-9c80-8366fa2b8ac2",
                            Email = "admin@miaoshu.xyz",
                            IsDeleted = false,
                            Password = "eFACbEM7k2qm411QbWSRemzWozm3ZZ1mrpxVYC06tkU=",
                            PhoneNumber = "",
                            RoleId = "b8cebe50-d7bd-4a98-b567-af5effb300f1",
                            Salt = "2dd0533d86df4322b072f0be77838019",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.AccountBook", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysUser", "User")
                        .WithMany("AccountBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SporeAccounting.Models.Config", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysUser", "User")
                        .WithMany("Configs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.HasOne("SporeAccounting.Models.IncomeExpenditureClassification", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureRecord", b =>
                {
                    b.HasOne("SporeAccounting.Models.Currency", "Currency")
                        .WithMany("IncomeExpenditureRecords")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporeAccounting.Models.IncomeExpenditureClassification", "IncomeExpenditureClassification")
                        .WithMany("IncomeExpenditureRecords")
                        .HasForeignKey("IncomeExpenditureClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporeAccounting.Models.SysUser", "User")
                        .WithMany("IncomeExpenditureRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("IncomeExpenditureClassification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRoleUrl", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysRole", "Role")
                        .WithMany("RoleUrls")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporeAccounting.Models.SysUrl", "Url")
                        .WithMany("RoleUrls")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Url");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUser", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SporeAccounting.Models.Currency", b =>
                {
                    b.Navigation("IncomeExpenditureRecords");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("IncomeExpenditureRecords");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRole", b =>
                {
                    b.Navigation("RoleUrls");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUrl", b =>
                {
                    b.Navigation("RoleUrls");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUser", b =>
                {
                    b.Navigation("AccountBooks");

                    b.Navigation("Configs");

                    b.Navigation("IncomeExpenditureRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
