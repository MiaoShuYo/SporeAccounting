// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SporeAccounting;

#nullable disable

namespace SporeAccounting.Migrations
{
    [DbContext(typeof(SporeAccountingDBContext))]
    [Migration("20241121055946_InitExchangeRateRecord_Currency")]
    partial class InitExchangeRateRecord_Currency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SporeAccounting.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = "3c3459a1-71d4-42de-ac06-1fefa680f0bd",
                            Abbreviation = "CNY",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(486),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "人民币"
                        },
                        new
                        {
                            Id = "1549bf32-772b-42b9-ab63-965e3275fb40",
                            Abbreviation = "USD",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(505),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "美元"
                        },
                        new
                        {
                            Id = "a22f451d-27cc-455d-860c-15caab73330c",
                            Abbreviation = "EUR",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(512),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "欧元"
                        },
                        new
                        {
                            Id = "b7dc9376-f54e-4d20-8b91-0a73970d6f3a",
                            Abbreviation = "JPY",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(518),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "日元"
                        },
                        new
                        {
                            Id = "3e04f1f5-5aa7-42dd-802c-e59c8d72aee9",
                            Abbreviation = "GBP",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(524),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "英镑"
                        },
                        new
                        {
                            Id = "a27f9290-3eb4-454d-b879-1cc1af2cc272",
                            Abbreviation = "MOP",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(538),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "澳门币"
                        },
                        new
                        {
                            Id = "8866428c-e3b8-4b54-87ca-b602f6ddf895",
                            Abbreviation = "HKD",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(545),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "港元"
                        },
                        new
                        {
                            Id = "1265bb8c-492f-4ead-959d-4b590933e3bd",
                            Abbreviation = "KRW",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(551),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "韩圆"
                        },
                        new
                        {
                            Id = "6f8b420d-91ea-492b-bd42-bcf5baed4305",
                            Abbreviation = "TWD",
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(557),
                            CreateUserId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            IsDeleted = false,
                            Name = "新台币"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.ExchangeRateRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ConvertCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParentClassificationId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("IncomeExpenditureClassification");

                    b.HasData(
                        new
                        {
                            Id = "895fe1d5-bebb-480d-b0c8-895024501b13",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 580, DateTimeKind.Local).AddTicks(464),
                            CreateUserId = "236e4d5c-b7e2-4f57-a92e-ccb6b1ff460b",
                            IsDeleted = false,
                            Name = "其他",
                            Type = -1
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.ToTable("SysRole");

                    b.HasData(
                        new
                        {
                            Id = "865db296-5455-4444-8022-b96f3cebdcfb",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 579, DateTimeKind.Local).AddTicks(9584),
                            CreateUserId = "236e4d5c-b7e2-4f57-a92e-ccb6b1ff460b",
                            IsDeleted = false,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            Id = "ecef295d-4ef0-4eb1-a829-2c9b6bdf594d",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 579, DateTimeKind.Local).AddTicks(9603),
                            CreateUserId = "236e4d5c-b7e2-4f57-a92e-ccb6b1ff460b",
                            IsDeleted = false,
                            RoleName = "Consumer"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRoleUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UrlId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UrlId");

                    b.ToTable("SysRoleUrl");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CanDelete")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SysUrl");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("SysUser");

                    b.HasData(
                        new
                        {
                            Id = "236e4d5c-b7e2-4f57-a92e-ccb6b1ff460b",
                            CanDelete = false,
                            CreateDateTime = new DateTime(2024, 11, 21, 13, 59, 46, 579, DateTimeKind.Local).AddTicks(9659),
                            CreateUserId = "236e4d5c-b7e2-4f57-a92e-ccb6b1ff460b",
                            Email = "admin@miaoshu.xyz",
                            IsDeleted = false,
                            Password = "gKXP4spr6oPv3q5WH/9Pa6bILVVMkudkQ7SU32voE6E=",
                            PhoneNumber = "",
                            RoleId = "865db296-5455-4444-8022-b96f3cebdcfb",
                            Salt = "51f48b4501fb49c18f453e12fa429ccf",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.HasOne("SporeAccounting.Models.IncomeExpenditureClassification", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRoleUrl", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysRole", "Role")
                        .WithMany("RoleUrls")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SporeAccounting.Models.SysUrl", "Url")
                        .WithMany("RoleUrls")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Url");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUser", b =>
                {
                    b.HasOne("SporeAccounting.Models.SysRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SporeAccounting.Models.IncomeExpenditureClassification", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysRole", b =>
                {
                    b.Navigation("RoleUrls");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SporeAccounting.Models.SysUrl", b =>
                {
                    b.Navigation("RoleUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
